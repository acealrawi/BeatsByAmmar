/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9-dev at Sun Jun  4 21:32:04 2017. */

#ifndef PB_PROTO_MESSAGE_PB_H_INCLUDED
#define PB_PROTO_MESSAGE_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _proto_espData {
    uint32_t x;
    uint32_t y;
    uint32_t z;
    uint32_t m;
/* @@protoc_insertion_point(struct:proto_espData) */
} proto_espData;

/* Default values for struct fields */

/* Initializer values for message structs */
#define proto_espData_init_default               {0, 0, 0, 0}
#define proto_espData_init_zero                  {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define proto_espData_x_tag                      1
#define proto_espData_y_tag                      2
#define proto_espData_z_tag                      3
#define proto_espData_m_tag                      4

/* Struct field encoding specification for nanopb */
extern const pb_field_t proto_espData_fields[5];

/* Maximum encoded size of messages (where known) */
#define proto_espData_size                       24

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
